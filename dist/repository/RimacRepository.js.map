{"version":3,"file":"RimacRepository.js","sourceRoot":"","sources":["../../src/repository/RimacRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAA+B;AAE/B,6CAA+B;AAE/B,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAC,MAAM,EAAG,WAAW,EAAC,CAAC,CAAC;AACzE,MAAa,eAAe;IAClB,MAAM,CAAC,OAAmB;;YAC5B,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACzB,MAAM,MAAM,GAAG;gBACX,SAAS,EAAE,OAAO;gBAClB,IAAI,oBAAO,OAAO,CAAE;aACvB,CAAC;YACF,MAAM,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;YACrC,OAAO,OAAO,CAAC;QACnB,CAAC;KAAA;IAEK,IAAI;;YACN,MAAM,QAAQ,GAAiB,EAAE,CAAA;YACjC,MAAM,MAAM,GAAG;gBACX,SAAS,EAAE,OAAO;aACrB,CAAC;YACF,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;YACtD,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAE,OAAO,CAAC,CAAC,IAAI,EAAG,EAAE;gBAC9B,QAAQ,CAAC,IAAI,CAAC,IAA6B,CAAC,CAAC;YACjD,CAAC,CAAC,CAAA;YACF,gBAAgB;YAChB,OAAO,QAAQ,CAAC;QACpB,CAAC;KAAA;CACJ;AAvBD,0CAuBC","sourcesContent":["import * as AWS from \"aws-sdk\";\r\nimport { SwapiModel } from \"../model/SwapiModel\";\r\nimport * as uuid from \"uuidv4\";\r\n\r\nconst doClient = new AWS.DynamoDB.DocumentClient({region : 'us-east-1'});\r\nexport class RimacRepository {\r\n    async create(request: SwapiModel): Promise<SwapiModel> {\r\n        request.id = uuid.uuid();\r\n        const params = {\r\n            TableName: \"Swapi\",\r\n            Item: { ...request }\r\n        };\r\n        await doClient.put(params).promise();\r\n        return request;\r\n    }\r\n\r\n    async list(): Promise<SwapiModel[]> {\r\n        const response: SwapiModel[] = []\r\n        const params = {\r\n            TableName: \"Swapi\",\r\n        };\r\n        const getItem = await doClient.scan(params).promise();\r\n        getItem?.Items!.forEach((item)  => {\r\n            response.push(item as unknown as SwapiModel);\r\n        })\r\n        // console.log()\r\n        return response;\r\n    }\r\n}"]}